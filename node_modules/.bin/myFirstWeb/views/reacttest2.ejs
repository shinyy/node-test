<!DOCTYPE html>
<html>
<head>
<title>reacttest</title>
<!-- <script type="text/javascript" src="js/react/react.js"></script>
<script type="text/javascript" src="js/react/react-dom.js"></script>
<script type="text/javascript" src="js/react/react-dom-server.js"></script>
<script type="text/javascript" src="js/react/react-with-addons.js"></script> -->

<script src="http://static.runoob.com/assets/react/react-0.14.7/build/react.min.js"></script>
<script src="http://static.runoob.com/assets/react/react-0.14.7/build/react-dom.min.js"></script>
<script src="http://static.runoob.com/assets/react/browser.min.js"></script>
<script type="text/javascript" src="js/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/marked/0.3.2/marked.min.js"></script>
</head>
<body>
	<div id="box1"></div>
	<div id="box2"></div>

	<script type="text/babel">
		var Myele=React.createClass({
			render:function(){
				return <h3>hello,{this.props.name}</h3>;
			}
		})
		React.render(
			<Myele name="react" />,
			document.getElementById("box1")
			);
		React.render(
			<Myele name="node" />,
			document.getElementById("box2")
			);
	</script>
	<div id="content"></div>
	<script type="text/babel">
	var data=[{author:"shin",text:"这是一个comment1"},
			  {author:"yy",text:"这是另一个comment2"}];
	//1
		var CommentBox=React.createClass({
			loadCommentsFromServer:function(){
				$.ajax({
					url:this.props.url,
					dataType:"json",
					cache:false,
					success:function(data){
						this.setState({data:data});
					}.bind(this),
					erroe:function(xhr,status,err){}.bind(this)
				});
			},
			handleCommentSubmit:function(comment){
				var comments=this.state.data;
				var newComments=comments.concat([comment]);
				this.setState({data:newComments});
				$.ajax({
					url:this.props.url,
					dataType:"json",
					type:"post",
					data:comment,
					success:function(data){
						this.setState({data:data});
					}.bind(this),
					error:function(xhr,status,err){
						console.error(this.props.url,status,err.toString());
					}.bind(this)
				});
			},
			getInitialState:function(){
				return{data:[]};
			},
			componentDidMount:function(){
				this.loadCommentsFromServer();
				setInterval(this.loadCommentsFromServer,this.props.pollInterval);
			},
			render:function(){
				return(
					<div className="commentBox">
						<h1>评论区</h1>
						<CommentList data={this.props.data}/>
						<CommentForm onCommentSubmit={this.handleCommentSubmit} />
					</div>
					);
			}
		});
		//2
		var CommentList=React.createClass({
			render:function(){
				var commentNodes=this.props.data.map(function(comment){
					return(
						<Comment author={comment.author}>
							{comment.text}
						</Comment>
						);
				});
				return(
					<div className="commentList">
						{commentNodes}
					</div>
					);
			}
		});
		var CommentForm=React.createClass({
			handleSubmit:function(e){
				e.preventDefault();
				var author=this.refs.author.value.trim();
				var text=this.refs.text.value.trim();
				if(!text||!author){
					return;
				}
				this.prpos.onCommentSubmit({author:author,text:text});
				this.refs.author.value="";
				this.refs.text.value="";
				return;
			},
			render:function(){
				return(
					<form className="commentForm" onSumbmit={this.handleSubmit}>
						<input type="text" placeholder="你的名字" ref="author" />
						<input type="text" placeholder="说点什么吧" ref="text"/>
						<input type="submit" value="提交" />
					<form>
					);
			}
		});
		//4
		var Comment=React.createClass({
			rawMarkup:function(){
				var rawMarkup=marked(this.props.children.toString(),{sanitize:true});
				return{__html:rawMarkup};
			},
			render:function(){
				return(
					<div className="comment">
						<h2 className="commentAuthor">
							{this.props.author}
						</h2>
						
						<span dangerouslySetInnerHTML={this.rawMarkup()} />
					</div>
					);
			}
		});


		React.render(
			// <CommentBox data={data}/>,
			<CommentBox url="/api/comments" />,
			document.getElementById("content")
			);
	</script>

</body>
</html>